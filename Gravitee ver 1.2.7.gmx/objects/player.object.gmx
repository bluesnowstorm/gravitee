<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>As</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>5</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///varibles
grav=1;
spd=12;
walkspd=4;
jspd=12;
hspd=0;
vspd=0;
startx=96;
starty=448;
facingright = true;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///platfrom

var rkey = keyboard_check(vk_right);
var lkey = keyboard_check(vk_left);
var jkey = keyboard_check(vk_up);
var dkey = keyboard_check(vk_down);
var resetkey = keyboard_check(vk_end);

if(place_meeting(x,y,lose)){
    room_restart();
}


if(lkey)
{
    facingright = false;
}
if(rkey)
{
    facingright = true;
}
if(facingright){
    image_xscale = 1;
}
else
{
    image_xscale = -1;
}

var thereisgravity = place_meeting(x,y,gravback); 

//the physics are different depending on whether there's gravity or not 
if(thereisgravity) {
    var canmove = place_meeting(x,y+1,objectsolid); //your movements register if you're standing on floor
    
    if(canmove) { //possible inputs: left, right, jump
        hspd = 0;
        if(jkey) {
            vspd = -spd;
        }}
        if(rkey) {
            hspd=walkspd;
        }
        if(lkey) {
            hspd = -walkspd;
        }
        if(((!rkey &amp;&amp; !lkey) || (rkey &amp;&amp; lkey)) &amp;&amp; canmove) {
            hspd=0;
        }
    //}
    //else {
      //  if (vspd &lt; 32) { //this is the terminal velocity, it isn't really needed i think
            vspd += grav; //this is a parabolic trajectory
        //}
    //}
}
else{
    var canmove = ( //your movements register if you're next to an object
        place_meeting(x-1,y,objectsolid) || 
        place_meeting(x,y-1,objectsolid) || 
        place_meeting(x,y+1,objectsolid) || 
        place_meeting(x+1,y,objectsolid)) &amp;&amp; /*( //can't remember what this block of code did but commenting it out doesn't do anything
        place_meeting(x,y+sign(vspd),objectsolid) || //i am a good programmer
        place_meeting(x+sign(hspd),y,objectsolid)) || */
        ((hspd == 0) &amp;&amp; (vspd == 0)); //and you're not moving
    
    if(canmove) { //possible movements: left, right, up, down

        if(jkey) {
            vspd = -spd;
        }
        if(dkey) {
            vspd = spd;
        }
        if((!jkey &amp;&amp; !dkey) || (jkey &amp;&amp; dkey)) {
            vspd=0;
        }
        if(rkey) {
            hspd=spd;
        }
        if(lkey) {
            hspd = -spd;
        }
        if((!rkey &amp;&amp; !lkey) || (rkey &amp;&amp; lkey)) {
            hspd=0;
        }
    }   
    
}

if(place_meeting(x,y+vspd,objectsolid)) { //handle collisions on the y axis
    while(!place_meeting(x,y+sign(vspd),objectsolid)) {
        y += sign(vspd); //move the player in the direction he's going until he hits something
    }
    vspd = 0;
}

y += vspd;

if(place_meeting(x+hspd,y,objectsolid)) { //handle collisions on the x axis
    while(!place_meeting(x+sign(hspd),y,objectsolid)) {
        x += sign(hspd);
    }
    hspd = 0;
}

x += hspd;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="5" enumb="82">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>room_restart();
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
